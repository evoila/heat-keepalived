heat_template_version: 2015-04-30
description: Installs HAProxy

parameters:

  server:
    type: string
    constraints:
      - custom_constraint: nova.server

  http_proxy:
    type: string
    description: "HTTP proxy URL"
    default: ''

  https_proxy:
    type: string
    description: "HTTPS proxy URL"
    default: ''

  no_proxy:
    type: string
    description: "Exceptions to proxy configuration"
    default: ''

  name:
    type: string

  router_id:
    type: string

  options:
    type: comma_delimited_list
    default:
      - "nopreempt"
      - "priority 1"
      - "advert_int 1"

  vip:
    type: string

  auth_pass:
    type: string
    hidden: true

resources:

  # SOFTWARE CONFIGS

  generate:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: { get_file: scripts/generate-vrrp-instance.sh }
      inputs:
        - name: NAME
        - name: ROUTER_ID
        - name: OPTIONS
          type: CommaDelimitedList
        - name: VIP
        - name: AUTH_PASS
      outputs:
        - name: config

  # SOFTWARE DEPLOYMENTS

  deploy_generate:
    type: OS::Heat::SoftwareDeployment
    properties:
      config: { get_resource: generate }
      server: { get_param: server }
      signal_transport: HEAT_SIGNAL
      input_values:
        http_proxy: { get_param: http_proxy }
        https_proxy: { get_param: https_proxy }
        no_proxy: { get_param: no_proxy }
        NAME: { get_param: name }
        ROUTER_ID: { get_param: router_id }
        OPTIONS: { get_param: options }
        VIP: { get_param: vip }
        AUTH_PASS: { get_param: auth_pass }

outputs:

  config:
    value: { get_attr: [ deploy_generate, config ] }
